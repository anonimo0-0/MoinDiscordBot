name: .NET

on:
  push:
    tags:
      - v**

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: "6.x.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

  release:
    needs: build
    name: Release
    strategy:
      matrix:
        kind: ["linux", "windows", "macOS"]
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.x.x"

      - name: Build
        shell: bash
        run: |
          # Define some variables for things we need
          tag=$(git describe --tags --abbrev=0)
          release_name="MoinDiscordBot-$tag-${{ matrix.target }}"

          # Build everything
          dotnet publish ./src/MoinDiscordBot/MoinDiscordBot.csproj -p:PublishSingleFile=true -p:UseAppHost=true -r ${{ matrix.target }} --self-contained true -c Release -o "$release_name"

          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            tar czvf "${release_name}.tar.gz" "$release_name"
          fi

          # Delete output directory
          rm -r "$release_name"

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "${{ github.ref_name }}-${{ matrix.kind }}"
          files: "MoinDiscordBot*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
